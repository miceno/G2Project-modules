<?php
/*
 * $RCSfile: GalleryCheckoutPaypalIPNHelper.class,v $
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/**
 * @package CheckoutPaypal
 * @version $Revision: 1132 $ $Date: 2006/04/07 20:51:05 $
 * @author Matthew Turnbull <matthew.turnbull@messagescan.net>
 */

/**
 * A helper class for GalleryCheckoutPaypalIPNs
 *
 * Utility functions useful in managing GalleryCheckoutPaypalIPNs
 *
 * @package CheckoutPaypal
 * @subpackage Classes
 */
class GalleryCheckoutPaypalIPNHelper {
	// Methods

	/**
	 * Return the PayPal transactions for a given checkout transaction
	 *
	 * @param array int GalleryItem id
	 * @return array (object GalleryStatus a status code,
	 *                array (item id => array (GalleryCheckoutPaypalIPN, ...), ...)
	 * @access private
	 * @static
	 */
	public function fetchPpTxns($itemId, $count = null, $orderDirection = ORDER_ASCENDING) {
		global $gallery;

		switch ($orderDirection) {
			case ORDER_ASCENDING:
				$direction = 'ASC';

				break;

			case ORDER_DESCENDING:
				$direction = 'DESC';

				break;

			default:
				return array(
					GalleryCoreApi::error(ERROR_BAD_PARAMETER, __FILE__, __LINE__),
					null,
				);
		}

		$query                     = '
        SELECT
          [GalleryCheckoutPaypalIPN::id]
        FROM
          [GalleryCheckoutPaypalIPN], [GalleryChildEntity]
        WHERE
          [GalleryChildEntity::parentId] = ?
          AND
          [GalleryChildEntity::id] = [GalleryCheckoutPaypalIPN::id]
        ORDER BY
          [GalleryCheckoutPaypalIPN::ppDate] ' . $direction . '
        ';
		list($ret, $searchResults) = $gallery->search(
			$query,
			array($itemId),
			array(
				'limit' => array(
					'count' => $count,
				),
			)
		);

		if ($ret) {
			return array($ret->wrap(__FILE__, __LINE__), null);
		}

		// Get all of our ids
		$allIds = array();

		while ($result = $searchResults->nextResult()) {
			$allIds[] = $result[0];
		}

		// Load all the transactions at once
		$ppTransactions = array();

		if (!empty($allIds)) {
			list($ret, $ppTransactions) = GalleryCoreApi::loadEntitiesById($allIds);

			if ($ret) {
				return array($ret->wrap(__FILE__, __LINE__), null);
			}
		}

		return array(null, $ppTransactions);
	}

	/**
	 * Return the number of paypal txns associated with the given item ids
	 *
	 * @param array int GalleryItem ids
	 * @return array object GalleryStatus a status code
	 *               int a count
	 * @access private
	 * @static
	 */
	public function fetchPpTxnCounts($itemIds) {
		global $gallery;

		$markers = GalleryUtilities::makeMarkers(sizeof($itemIds));
		$query   = '
        SELECT
          [GalleryChildEntity::parentId],
          COUNT([GalleryCheckoutPaypalIPN::id])
        FROM
          [GalleryCheckoutPaypalIPN], [GalleryChildEntity]
        WHERE
          [GalleryChildEntity::parentId] IN (' . $markers . ')
          AND
          [GalleryChildEntity::id] = [GalleryCheckoutPaypalIPN::id]
        GROUP BY
          [GalleryChildEntity::parentId]
        ';

		list($ret, $searchResults) = $gallery->search($query, $itemIds);

		if ($ret) {
			return array($ret->wrap(__FILE__, __LINE__), null);
		}

		$data = array();

		while ($result = $searchResults->nextResult()) {
			$data[$result[0]] = (int)$result[1];
		}

		return array(null, $data);
	}
}
