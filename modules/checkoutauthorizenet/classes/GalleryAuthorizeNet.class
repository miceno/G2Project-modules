<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2007 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * @version $Revision: 1200 $
 * @package CheckoutAuthorizeNet
 * @author Michael Rodrï¿½guez-Torrent <mike@themikecam.com>
 */

/**
 * A class to post transactions to Authorize.Net from Gallery. Based largely on
 * class.authorizenet.php by Adam Olson. Requires cURL to be installed on the command line.
 *
 * @package CheckoutAuthorizeNet
 * @subpackage Classes
 */
class GalleryAuthorizeNet {
	/**
	 * The Authorize.Net implementation to use.
	 *
	 * @var object $_authorizeNet
	 */
	public $_authorizeNet;

	public function __construct() {
		GalleryCoreApi::requireOnce(
			'modules/checkoutauthorizenet/classes/AuthorizeNetAim.class'
		);
	}

	public function init($method = 'CC') {
		global $gallery;

		list($ret, $loginId) = GalleryCoreApi::getPluginParameter(
			'module',
			'checkoutauthorizenet',
			'authorizeNetId'
		);

		if ($ret) {
			return array($ret->wrap(__FILE__, __LINE__), null);
		}
		list($ret, $tranKey) = GalleryCoreApi::getPluginParameter(
			'module',
			'checkoutauthorizenet',
			'tranKey'
		);

		if ($ret) {
			return array($ret->wrap(__FILE__, __LINE__), null);
		}
		$this->_authorizeNet = new AuthorizeNetAim($loginId, $tranKey);

		list($ret, $mode) = GalleryCoreApi::getPluginParameter(
			'module',
			'checkoutauthorizenet',
			'mode'
		);

		if ($ret) {
			return array($ret->wrap(__FILE__, __LINE__), null);
		}
		$ret = $this->_authorizeNet->setMode($mode);

		if ($ret) {
			return $ret->wrap(__FILE__, __LINE__);
		}

		$ret = $this->_authorizeNet->setMethod($method);

		if ($ret) {
			return $ret->wrap(__FILE__, __LINE__);
		}

		list($ret, $curl) = GalleryCoreApi::getPluginParameter(
			'module',
			'checkoutauthorizenet',
			'curlPath'
		);

		if ($ret) {
			return $ret->wrap(__FILE__, __LINE__);
		}
		$this->_authorizeNet->setCurlPath($curl);

		return null;
	}

	public function process() {
		list($ret, $error) = $this->_authorizeNet->process();

		if ($ret) {
			return array($ret->wrap(__FILE__, __LINE__), null);
		}

		return array(null, $error);
	}

	public function setFirstName($name) {
		$this->_authorizeNet->setFirstName($name);
	}

	public function setLastName($name) {
		$this->_authorizeNet->setLastName($name);
	}

	public function setEmail($email) {
		$this->_authorizeNet->setEmail($email);
	}

	public function setEmailCustomer($emailCustomer) {
		$this->_authorizeNet->setEmailCustomer($emailCustomer);
	}

	public function setPhone($phone) {
		$this->_authorizeNet->setPhone($phone);
	}

	public function setAddress($address) {
		$this->_authorizeNet->setAddress($address);
	}

	public function setCity($city) {
		$this->_authorizeNet->setCity($city);
	}

	public function setState($state) {
		$this->_authorizeNet->setState($state);
	}

	public function setZip($zip) {
		$this->_authorizeNet->setZip($zip);
	}

	public function setCountry($country) {
		$this->_authorizeNet->setCountry($country);
	}

	public function setAmount($amount) {
		$this->_authorizeNet->setAmount($amount);
	}

	public function setCardNum($cardNum) {
		$this->_authorizeNet->setCardNum($cardNum);
	}

	public function setExpDate($expDate) {
		$this->_authorizeNet->setExpDate($expDate);
	}

	public function setBankAbaCode($abaCode) {
		$this->_authorizeNet->setBankAbaCode($abaCode);
	}

	public function setBankAcctNum($acctNum) {
		$this->_authorizeNet->setBankAcctNum($acctNum);
	}

	public function setBankAcctType($acctType) {
		$this->_authorizeNet->setBankAcctType($acctType);
	}

	public function setBankAcctName($acctName) {
		$this->_authorizeNet->setBankAcctName($acctName);
	}

	public function setBankName($name) {
		$this->_authorizeNet->setBankName($name);
	}
}
