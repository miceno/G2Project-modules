<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2007 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * Utility functions useful in managing Checkout Products
 * @version $Revision: 1389 $
 * @package checkout
 * @author Alec Myers <alec@alecmyers.com>
 * @static
 */
class CheckoutDiscountMapHelper {
	/**
	 * Return the hierarchical set of product parameters for an album or photo item
	 * numerically indexed and sorted by display order
	 *
	 * @return array (object GalleryStatus a status code,
	 *          array (display position => array (paramName => paramValue, ... ) ... ))
	 */
	public function fetchDiscounts() {
		list($ret, $searchResults) = GalleryCoreApi::getMapEntry(
			'CheckoutDiscountMap',
			array(
				'discountId',
				'description',
				'entryCode',
				'minValue',
				'minItems',
				'minProducts',
				'groupId',
				'discountPercent',
				'discountFixed',
				'freePostage',
				'applyDefault',
			),
			array(),
			array(
				'orderBy' => array(
					'priority' => ORDER_ASCENDING,
				),
			)
		);

		if ($ret) {
			return array($ret, null);
		}
		$discounts = array();
		$i         = 0;

		while ($result = $searchResults->nextResult()) {
			$discounts[] = array(
				'discountId'      => $result[0],
				'description'     => $result[1],
				'entryCode'       => $result[2],
				'minValue'        => $result[3],
				'minItems'        => $result[4],
				'minProducts'     => $result[5],
				'groupId'         => $result[6],
				'discountPercent' => $result[7],
				'discountFixed'   => $result[8],
				'freePostage'     => $result[9] ? 'true' : 'false',
				'applyDefault'    => $result[10] ? 'true' : 'false',
				'priority'        => $i++,
			);
		}

		return array(null, $discounts);
	}

	/**
	 * Set a parameter
	 *
	 * @param array $thisDiscount
	 * @return object GalleryStatus a status code
	 */
	public function setDiscount($thisDiscount) {
		global $gallery;
		//need to read lock this section
		//delete the discount if it already exists
		$ret = GalleryCoreApi::removeMapEntry(
			'CheckoutDiscountMap',
			array(
				'discountId' => $thisDiscount['discountId'],
			)
		);
		//don't check return code
		$ret = GalleryCoreApi::addMapEntry(
			'CheckoutDiscountMap',
			array(
				'discountId'      => $thisDiscount['discountId'],
				'description'     => $thisDiscount['description'],
				'entryCode'       => $thisDiscount['entryCode'],
				'minValue'        => $thisDiscount['minValue'],
				'minItems'        => $thisDiscount['minItems'],
				'minProducts'     => $thisDiscount['minProducts'],
				'groupId'         => $thisDiscount['groupId'],
				'discountPercent' => $thisDiscount['discountPercent'],
				'discountFixed'   => $thisDiscount['discountFixed'],
				'freePostage'     => $thisDiscount['freePostage'],
				'priority'        => $thisDiscount['priority'],
				'applyDefault'    => $thisDiscount['applyDefault'],
			)
		);

		if ($ret) {
			return $ret;
		}

		return null;
	}

	/**
	 * Delete a discount
	 *
	 * @param string $id
	 * @return object GalleryStatus a status code
	 */
	public function deleteDiscount($id) {
		$ret = GalleryCoreApi::removeMapEntry(
			'CheckoutDiscountMap',
			array(
				'discountId' => $id,
			)
		);

		if ($ret) {
			return $ret;
		}

		return null;
	}
}
