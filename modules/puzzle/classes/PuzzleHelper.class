<?php
/*
 * $RCSfile: module.inc,v $
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */
/**
 * @package Puzzle
 * @version $Revision: 1481 $ $Date: 2006/07/03 08:04:11 $
 * @author J. Mike Rollins <rollins@CamoTruck.Net>
 * @contrib azn_oohwee
 *//**
 * CamoTruck.Net Puzzle Module
 *
 * This module provides support for adding puzzles to items
 *
 * @package Puzzle
 */
class PuzzleHelper {
	public function isEnabledForAlbum($album) {
		// check the album for the 'enabled' parameter
		list($ret, $enabled) = GalleryCoreApi::getPluginParameter('module', 'puzzle', 'enabled', $album->getId());

		if ($ret) {
			// don't know what can cause this error
			return array($ret->wrap(__FILE__, __LINE__), null);
		}

		if ($enabled == 'no') {
			return array(null, 'no');
		}

		return array(null, 'yes');
	}

	// if there is a Gallery function which does this, please send me an email about it
	public function findParentAlbum($item) {
		global $gallery;
		$found = false;

		$count = 0; // just being paranoid

		// I think the parent of any photo is the album, but let's traverse the tree to make sure
		while (true) {
			// just because I hate the idea of an infinite loop.
			if (++$count > 10000) {
				return array(GalleryCoreApi::error(ERROR_UNKNOWN, __FILE__, __LINE__), null);
			}

			list($ret, $parent) = $item->fetchParent();

			if ($ret) {
				return array($ret, null);
			}

			if (GalleryUtilities::isA($parent, 'GalleryAlbumItem')) {
				return array(null, $parent);
			}

			$item = $parent;
		}
	}
}
